# *********************************************************************************
#
# rte.sh (r.terradyn.engine) - called by r.terradyn script.
# Updates terrain based on SIMWE erdep and modified Exner equation.
# Assumes predefined region and existing mapsets with required inputs.
#
# C.S. Thaxton, NCSU
#
# INPUT ARGUMENTS:
#   $1: name       - name assigned to output (should be unique)
#   $2: numiter    - number of terrain change iterations
#   $3: dzthresh   - max allowed change in z (select 9999 to turn this off)
#   $4: smoothsize - r.neighbors size=* for dz smoothing (e.g. 3)
#   $5: dtoverrhob - SIMWE time step divided by bulk density (i.e. 0.1/0.4=0.25)
#   $-: diffc      - diffusion coefficient for SIMWE [set to 0.3]
#   $-: halpha     - diffusion modification term in SIMWE [set to 10]
#   $6: grdiff     - gravitational diffusion term (select 0 to turn this off)
#   $7: hthresh    - minimum water depth for which tranin is modified (channels)
#   $8: tranmod    - $9 modification scalar (e.g. 100 sets tranin=0.1)
#                    (select 1 to turn off $9 and $10)
#   $9: niter      - SIMWE niter=outiter (here) (e.g. 1000)
#
# INPUT FILES: These files must uniquely exist in an accessible mapset:
#   SIMWE inputs: elin, dxin, dyin, rainin, infilin(0), manin, tauin, detin, tranin
#   rte.sh inputs: el.initial, dx.initial, dy.initial, tran.initial
#   NOTE: elin, dxin, dyin, and (possibly) tranin are modified at each rte.sh iteration
#
# OUTPUT FILES: Produces a time series of as "name_numiter.***" where *** is:
#   SIMWE: disch, depth, flux, erdep, tc, et
#   rte.sh: del_elev, truncp, truncn, del_elev_smooth, elev
#
# *********************************************************************************
#
echo "*** Calling r.sim.water2"
echo "    running..."
r.sim.water2 elevin=elin dxin=dxin dyin=dyin rain=rainin inf=infilin manin=manin diffc=0.3 halpha=10 disch=$1_$2.disch depth=$1_$2.depth nwalk=40000 niter=$9 outiter=$9
echo " "
echo "*** Modifying tranin based on water depth"
echo " "
r.mapcalc tran_temp="$8*tran001"
r.mapcalc tranin="if($1_$2.depth>$7, tran_temp, tran.initial)"
echo " "
echo "*** Calling r.sim.sediment2" 
echo "    running..."
r.sim.sediment2 elevin=elin wdepth=$1_$2.depth dxin=dxin dyin=dyin detin=detin tranin=tranin tauin=tauin manin=manin diffc=0.3 flux=$1_$2.flux erdep=$1_$2.erdep tc=$1_$2.tc et=$1_$2.et nwalk=40000 niter=$9 outiter=$9
echo " "
echo "*** Computing gravitational diffusion..."
echo " "
# NOTE: *.flux is qs
r.mapcalc absqs="abs($1_$2.flux)"
r.slope.aspect elevation=absqs dx=dqsdx dy=dqsdy
r.slope.aspect elevation=elin dx=dzdx dy=dzdy dxx=dzdxx dyy=dzdyy
r.mapcalc delz="dzdx+dzdy"
r.mapcalc del2z="dzdxx+dzdyy"
r.mapcalc delqs="dqsdx+dqsdy"
r.mapcalc grav_diff="$6*(delqs*delz+absqs*del2z)"
echo " "
echo "*** Computing change in elevation..."
echo " "
# NOTE: *.erdep is D=divergence(qs)
r.mapcalc $1_$2.del_elev="-1.0*$5*($1_$2.erdep-grav_diff)"
echo " "
echo "*** Truncating excessive gradients (disabled if this is 9999.0--->$3)..."
echo " "
# remove excessive gradients (-1<del_elev<1)
# later, this should be governed by water depth only
# ideally, these rasters are zero
r.mapcalc $1_$2.truncp="if($1_$2.del_elev>$3, $1_$2.del_elev, 0)"
r.mapcalc $1_$2.del_elev="if($1_$2.del_elev>$3, $3, $1_$2.del_elev)"
r.mapcalc $1_$2.truncn="if($1_$2.del_elev<-$3, $1_$2.del_elev, 0)"
r.mapcalc $1_$2.del_elev="if($1_$2.del_elev<-$3, -$3, $1_$2.del_elev)"
echo " "
echo "*** Smoothing del(z)..."
echo " "
r.neighbors input=$1_$2.del_elev output=$1_$2.del_elev_smooth method=average size=$4
echo " "
echo "*** Computing and assigning elevation for next iteration..."
echo " "
r.mapcalc $1_$2.elev="elin+$1_$2.del_elev_smooth"
r.mapcalc elin="1.0*$1_$2.elev"
echo " "
echo "*** Computing new slopes for next iteration..."
echo " "
r.slope.aspect elevation=elin dx=eldx_temp dy=eldy_temp
echo " "
echo "*** Correcting edge NULLs (if they exist)..."
echo " "
# correct edge NULLs by assigning the original values to the boundary locations
# this will be fixed later (we'll see if this works over iterations)
r.mapcalc dxin="if(isnull(eldx_temp), dx.initial, eldx_temp)"

r.mapcalc dyin="if(isnull(eldy_temp), dy.initial, eldy_temp)"

# echo "*** Modify transport coefficient"
# r.mapcalc tranin="if($1.del_elev_smooth.6>0.01, tran005, tranin)"
echo " "
echo "*** Redefining color maps..."
echo " "
r.colors $1_$2.truncp rast=el.initial
r.colors $1_$2.truncn rast=el.initial
r.colors $1_$2.elev rast=el.initial
echo " "
echo "*** Iteration $2 of $1 complete...moving on..."
echo " "
